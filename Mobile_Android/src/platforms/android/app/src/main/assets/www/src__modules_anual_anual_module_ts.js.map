{"version":3,"file":"src__modules_anual_anual_module_ts.js","mappings":"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","sources":["./src/_components/anual/anual.component.ts","./src/_components/anual/anual.component.html","./src/_modules/anual/anual-routing.module.ts","./src/_modules/anual/anual.module.ts"],"sourcesContent":["import { Component, OnInit, ChangeDetectorRef, AfterViewChecked } from '@angular/core';\nimport { UsersService } from '../../services/users.service';\nimport { HelperService } from '../../services/helper.service';\nimport { DiarioService } from '../../services/diario.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { firstValueFrom } from 'rxjs';\nimport { ISaldoItem } from '../../models/saldoItem';\nimport { DatePipe } from '@angular/common';\nimport { SaldoAbiertoComponent } from '../saldo-abierto/saldo-abierto.component';\nimport { CalculationService } from '../../sharedServices/calculationService';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UrlConstants } from '../../constants/url.constants';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-anual',\n  templateUrl: './anual.component.html',\n  styleUrls: ['./anual.component.css']\n})\nexport class AnualComponent implements OnInit, AfterViewChecked {\n  anios = new Array<number>();\n  anioSelected: number;\n  loading = false;\n  loadingDetail = false;\n  conceptosTotales: any[];\n  itemDetail: any[];\n  saldoAnual = 0;\n  openItem: string;\n\n  get saldoTitle() : string {\n    return this.translate.instant('yearScreen.yearBalance');\n  }\n\n  constructor(private _datePipe: DatePipe,\n              private _diarioService: DiarioService,\n              public _userService: UsersService,\n              public snackBar: MatSnackBar,\n              public saldoAbierto: MatDialog,\n              private calculationService: CalculationService,\n              private router: Router,\n              private changeDetector: ChangeDetectorRef,\n              private activeRoute: ActivatedRoute,\n              public translate: TranslateService,\n              private _helperService: HelperService) {\n    this.anioSelected = this.getYearFromUrl();\n  }\n\n  ngOnInit(): void {\n    this.getPrimerConsumo();\n  }\n\n  ngAfterViewChecked(): void {\n    this.changeDetector.detectChanges();\n  }\n\n  async getPrimerConsumo(): Promise<void> {\n    this.loading = true;\n\n    const source$ = await this._diarioService.getPrimerConsumo();\n\n    try {\n      const data = await firstValueFrom(source$);\n\n      const anioPrimerConsumo = Number(data.firstTransaction.substring(0, 4));\n      const anioUltimoConsumo = Number(data.lastTransaction.substring(0, 4));\n\n      for (let _i = anioUltimoConsumo; _i >= anioPrimerConsumo; _i--) {\n        this.anios.push(_i);\n      }\n\n      this.getData();\n\n    } catch (error) {\n      this.loading = false;\n      this._helperService.showSnackBarError(this.snackBar, this._helperService.getErrorMessage(error));\n    }\n  }\n\n  showOpenSaldo(): void {\n    const saldos: ISaldoItem[] = [];\n\n    const saldoItem: ISaldoItem = {\n      title: 'Año' + this._helperService.toCamelCase(this._datePipe.transform(new Date(this.anioSelected, 1, 1), 'yyyy')),\n      icon: 'airplay',\n      ingresos: this.getIngresos(),\n      egresos: this.getEgresos(),\n      concept: 'anual',\n      date: new Date(this.anioSelected, 1, 1)\n    };\n\n    saldos.push(saldoItem);\n    this.saldoAbierto.open(SaldoAbiertoComponent, { width: '500px', data: {saldos} });\n  }\n\n  async loadYearDetails(row: any): Promise<void> {\n    this.loadingDetail = true;\n\n    this.openItem = row.description;\n    this.itemDetail = [];\n\n    const source$ = this._diarioService.getConceptosMovimAnio(row.conceptId, this.anioSelected)\n\n    try {\n      const data = await firstValueFrom(source$);\n\n      this.itemDetail = data;\n\n      this.itemDetail.forEach((element) => {\n        const fecha = this._helperService.convertStringMMYYYYToDate(element.month);\n        element.MonthFormatted = this._helperService.toCamelCase(this._datePipe.transform(fecha, 'LLLL yyyy'));\n      });\n\n      this.loadingDetail = false;\n      this.router.navigate([UrlConstants.DASHBOARD, UrlConstants.ANUAL, this.anioSelected, this.openItem],\n                            {replaceUrl: false});\n    } catch (error) {\n      this.loading = false;\n      this._helperService.showSnackBarError(this.snackBar, this._helperService.getErrorMessage(error));\n    }\n  }\n\n  onChangeYear(): void {\n    this.router.navigate([UrlConstants.DASHBOARD, UrlConstants.ANUAL, this.anioSelected, this.openItem],\n                         {replaceUrl: false});\n    this.getData();\n  }\n\n  goToMonth(fecha: string, concepto: string ): void {\n    const fechaFormated = this.convertMMYYYYToYYYYMM(fecha);\n    this.router.navigate([UrlConstants.DASHBOARD, UrlConstants.MENSUAL, fechaFormated, concepto]);\n  }\n\n  getOpenItem(): string | null {\n    return this.activeRoute.snapshot.paramMap.get('open');\n  }\n\n  private scrollToItem(item: string): void {\n    setTimeout(function (itemToScroll: string) {\n      if (itemToScroll === 'none') {\n        return;\n      }\n\n      const elmnt = document.getElementById('item' + itemToScroll);\n      if (elmnt === null) {\n        return;\n      }\n      elmnt.scrollIntoView({block: 'start', behavior: 'auto'});\n\n      const tt = document.getElementById('mainTable');\n      if (tt !== null) {\n        tt.scrollTop = tt.scrollTop - 30;\n      }\n\n    }, 1, item);\n  }\n\n  private convertToNumberArray(dataIn: any[]): number[] {\n    if (dataIn !== undefined){\n      const importes: number[] = [];\n      dataIn.forEach(function (value) {\n        importes.push(value.balance);\n      });\n\n      return importes;\n    }\n\n    return [];\n  }\n\n  private getYearFromUrl(): number {\n    const dateUrl = this.activeRoute.snapshot.paramMap.get('anio');\n    return Number(dateUrl);\n  }\n\n  private getIngresos(): number {\n    return this.calculationService.getIngresos(this.convertToNumberArray(this.conceptosTotales));\n  }\n\n  private getEgresos(): number {\n    return this.calculationService.getEgresos(this.convertToNumberArray(this.conceptosTotales));\n  }\n\n  private async getData(): Promise<void> {\n    this.loading = true;\n\n    const source$ = this._diarioService.getConceptosTotalAnio(this.anioSelected);\n\n    try {\n      const data = await firstValueFrom(source$);\n\n      this.conceptosTotales = data;\n      this.saldoAnual = this.getIngresos() - this.getEgresos();\n\n      this.loading = false;\n\n      this.openItem = this.getOpenItem() ?? '';\n      this.scrollToItem(this.openItem);\n\n    } catch (error) {\n      this.loading = false;\n      this._helperService.showSnackBarError(this.snackBar, this._helperService.getErrorMessage(error));\n    }\n  }\n\n  private convertMMYYYYToYYYYMM(fecha: string): string {\n    return fecha.substring(2, 8) + '-' + fecha.substring(0, 2);\n  }\n}\n","<div class=\"loading\" *ngIf=\"loading\">\n  <mat-spinner diameter=\"70\" strokeWidth=\"5\"></mat-spinner>\n</div>\n\n<div *ngIf=\"!loading\">\n  <div class=\"header\">\n    <div class=\"column\">\n      <mat-form-field class=\"anioSelect\">\n        <mat-label>{{'yearScreen.year' | translate }}</mat-label>\n        <mat-select [(value)]=\"anioSelected\" (selectionChange)=\"onChangeYear()\">\n          <mat-option *ngFor=\"let anio of anios\" [value]=\"anio\">{{anio}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n\n    <div class=\"column saldos\">\n      <app-saldo [titulo]=\"this.saldoTitle\" [saldo]=\"saldoAnual\" (saldoClicked)=\"showOpenSaldo()\"></app-saldo>\n    </div>\n  </div>\n\n  <div class=\"tableContent\" id=\"mainTable\">\n    <mat-accordion class=\"conceptos-table\">\n      <mat-expansion-panel *ngFor=\"let ct of conceptosTotales\" [expanded]=\"!loading && ct.description === openItem\" (opened)=\"loadYearDetails(ct)\">\n        <mat-expansion-panel-header>\n          <mat-panel-title id=\"{{'item' + ct.description}}\">\n            {{ct.description}}\n          </mat-panel-title>\n          <mat-panel-description [class.importeNegativo]=\"ct.balance < 0\">\n            {{ct.balance | currency:this._userService.userCurrency}}\n          </mat-panel-description>\n        </mat-expansion-panel-header>\n\n        <mat-spinner class=\"loading\" *ngIf=\"loadingDetail\"></mat-spinner>\n        <mat-list *ngIf=\"!loadingDetail\">\n          <mat-list-item *ngFor=\"let detail of itemDetail\">\n            <div matLine>\n              <p class=\"itemDescription\" (click)=\"goToMonth(detail.month, ct.description)\">\n                {{detail.MonthFormatted}}\n              </p>\n              <p class=\"itemAmount\" (click)=\"goToMonth(detail.month, ct.description)\" [class.importeNegativo]=\"detail.balance < 0\">{{detail.balance | currency:this._userService.userCurrency}}</p>\n              </div>\n          </mat-list-item>\n        </mat-list>\n\n      </mat-expansion-panel>\n    </mat-accordion>\n\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AnualComponent } from './../../_components/anual/anual.component';\n\nconst routes: Routes = [\n  { path: ':anio/:open', component: AnualComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AnualRoutingModule { }\n","import { SharedModule } from './../shared/shared.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AnualRoutingModule } from './anual-routing.module';\nimport { AnualComponent } from './../../_components/anual/anual.component';\nimport { TranslateModule } from '@ngx-translate/core';\n\n\n@NgModule({\n  declarations: [AnualComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    AnualRoutingModule,\n    TranslateModule\n  ]\n})\nexport class AnualModule { }\n"],"names":["firstValueFrom","SaldoAbiertoComponent","UrlConstants","i0","ctx_r10","ctx_r13","ctx_r15","ctx_r19","ctx_r20","ctx_r1","AnualComponent","constructor","_datePipe","_diarioService","_userService","snackBar","saldoAbierto","calculationService","router","changeDetector","activeRoute","translate","_helperService","Array","anioSelected","getYearFromUrl","saldoTitle","instant","ngOnInit","getPrimerConsumo","ngAfterViewChecked","detectChanges","loading","source$","data","anioPrimerConsumo","Number","firstTransaction","substring","anioUltimoConsumo","lastTransaction","_i","anios","push","getData","error","showSnackBarError","getErrorMessage","showOpenSaldo","saldos","saldoItem","title","toCamelCase","transform","Date","icon","ingresos","getIngresos","egresos","getEgresos","concept","date","open","width","loadYearDetails","row","loadingDetail","openItem","description","itemDetail","getConceptosMovimAnio","conceptId","forEach","element","fecha","convertStringMMYYYYToDate","month","MonthFormatted","navigate","DASHBOARD","ANUAL","replaceUrl","onChangeYear","goToMonth","concepto","fechaFormated","convertMMYYYYToYYYYMM","MENSUAL","getOpenItem","snapshot","paramMap","get","scrollToItem","item","setTimeout","itemToScroll","elmnt","document","getElementById","scrollIntoView","block","behavior","tt","scrollTop","convertToNumberArray","dataIn","undefined","importes","value","balance","dateUrl","conceptosTotales","getConceptosTotalAnio","saldoAnual","_a","selectors","decls","vars","consts","template"],"sourceRoot":"webpack:///"}
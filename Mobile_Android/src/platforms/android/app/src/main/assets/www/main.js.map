{"version":3,"file":"main.js","mappings":"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","sources":["./src/_components/about/about.component.ts","./src/_components/about/about.component.html","./src/_components/dashboard/dashboard.component.ts","./src/_components/dashboard/dashboard.component.html","./src/_components/login/login.component.ts","./src/_components/login/login.component.html","./src/_components/saldo-abierto/saldo-abierto.component.ts","./src/_components/saldo-abierto/saldo-abierto.component.html","./src/_components/saldo-item/saldo-item.component.ts","./src/_components/saldo-item/saldo-item.component.html","./src/_components/saldo/saldo.component.ts","./src/_components/saldo/saldo.component.html","./src/_modules/shared/shared.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/constants/url.constants.ts","./src/environments/environment.ts","./src/guards/auth.guard.ts","./src/interceptors/AuthInterceptor.ts","./src/main.ts","./src/services/componentBase.ts","./src/services/concepto.service.ts","./src/services/diario.service.ts","./src/services/helper.service.ts","./src/services/ip.service.ts","./src/services/sumary-anio.service.ts","./src/services/sumary-historico.service.ts","./src/services/sumary-month.service.ts","./src/services/url.service.ts","./src/services/users.service.ts","./src/sharedServices/calculationService.ts","./src/sharedServices/formatingService.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent {\n\n  constructor(public translate: TranslateService) { }\n\n}\n","<img src=\"assets/icons/icon-35x35.png\" alt=\"MoneyGuard\" style=\"float: left;\">\n<h2 mat-dialog-title>MoneyGuard</h2>\n<mat-dialog-content>\n    <mat-card>{{\"about.version\" | translate:{version: \"2.6.0\" } }}</mat-card>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button mat-dialog-close>{{'about.close' | translate }}</button>\n</mat-dialog-actions>\n","import { ComponentBase } from './../../services/componentBase';\nimport { Component, OnInit, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { UsersService } from '../../services/users.service';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AboutComponent } from '../about/about.component';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { filter } from 'rxjs/operators';\nimport { UrlConstants } from '../../constants/url.constants';\nimport { Subscription } from 'rxjs';\nimport { DatePipe } from '@angular/common';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent extends ComponentBase implements OnInit, OnDestroy {\n  userName: string = '';\n  actualPageTitle: string = '';\n  private _subscriptions = new Subscription();\n\n  constructor(private _userService: UsersService,\n              private router: Router,\n              private _datePipe: DatePipe,\n              private changeDetectorRef: ChangeDetectorRef,\n              private media: MediaMatcher,\n              public translate: TranslateService,\n              public aboutDialog: MatDialog) {\n    super(changeDetectorRef, media);\n\n    this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd))\n        .subscribe((event: any) => {\n          this.actualPageTitle = this.getPageTitle(event.url);\n      });\n  }\n\n  ngOnInit() {\n    this._subscriptions.add(this._userService.userName\n      .subscribe((username) => {\n        this.userName = username;\n      })\n    );\n  }\n\n  routeDiario () {\n    const today = this._datePipe.transform(new Date(), 'yyyy-MM-dd');\n    this.router.navigate([UrlConstants.DASHBOARD, UrlConstants.DIARIO, today]);\n  }\n\n  routeMensual () {\n    const month = this._datePipe.transform(new Date(), 'yyyy-MM');\n    this.router.navigate([UrlConstants.DASHBOARD, UrlConstants.MENSUAL, month, 'none']);\n  }\n\n  routeAnual () {\n    this.router.navigate([UrlConstants.DASHBOARD, UrlConstants.ANUAL, new Date().getFullYear(), 'none']);\n  }\n\n  routeHistorico () {\n    this.router.navigate([UrlConstants.DASHBOARD, UrlConstants.HISTORICO]);\n  }\n\n  routeConceptos () {\n    this.router.navigate([UrlConstants.DASHBOARD, UrlConstants.CONCEPTOS]);\n  }\n\n  routeUserProfile () {\n    this.router.navigate([UrlConstants.DASHBOARD, UrlConstants.USERS, UrlConstants.USERPROFILE]);\n  }\n\n  logout () {\n    this._userService.logout();\n    this.router.navigate([UrlConstants.LOGIN]);\n  }\n\n  override ngOnDestroy(): void {\n    this._subscriptions.unsubscribe();\n    super.ngOnDestroy();\n  }\n\n  about(): void {\n    this.aboutDialog.open(AboutComponent, {\n      width: '250px'\n    });\n  }\n\n  getPageTitle(url: string): string {\n    const prefix = '/' + UrlConstants.DASHBOARD + '/';\n\n    if (url.startsWith(prefix + UrlConstants.DIARIO)) {\n      return ' - ' + this.translate.instant('menu.daily');\n    }\n\n    if (url.startsWith(prefix + UrlConstants.MENSUAL)) {\n      return ' - ' + this.translate.instant('menu.monthly');\n    }\n\n    if (url.startsWith(prefix + UrlConstants.ANUAL)) {\n      return ' - ' + this.translate.instant('menu.annual');\n    }\n\n    if (url.startsWith(prefix + UrlConstants.HISTORICO)) {\n      return ' - ' + this.translate.instant('menu.historic');\n    }\n\n    if (url.startsWith(prefix + UrlConstants.CONCEPTOS)) {\n      return ' - ' + this.translate.instant('menu.concepts');\n    }\n\n    if (url.startsWith(prefix + UrlConstants.USERS + '/' + UrlConstants.USERPROFILE)) {\n      return ' - ' + this.translate.instant('menu.profile');\n    }\n\n    return '';\n  }\n}\n","<div class=\"main-container\" [class.main-is-mobile]=\"isMobile()\">\n  <mat-toolbar color=\"primary\" class=\"main-toolbar\">\n      <button mat-icon-button (click)=\"snav.toggle()\"><img src=\"assets/icons/icon-35x35.png\" alt=\"MoneyGuard\"></button>\n      <h1 class=\"main-app-name\">MoneyGuard<span style=\"font-size: smaller;\">{{actualPageTitle}}</span></h1>\n      <span class=\"example-spacer\"></span>\n      <h3 class=\"main-app-name\">{{userName}}</h3>\n  </mat-toolbar>\n\n  <mat-sidenav-container class=\"main-sidenav-container\"\n       [style.marginTop.px]=\"isMobile() ? 56 : 0\">\n          <mat-sidenav #snav [fixedInViewport]=\"isMobile()\" fixedTopGap=\"56\" (click)=\"snav.toggle()\">\n          <mat-nav-list>\n              <a mat-list-item (click)='routeDiario()'>\n                <mat-icon>today</mat-icon>{{'menu.daily' | translate }}\n              </a>\n              <a mat-list-item (click)=\"routeMensual()\">\n                <mat-icon>calendar_today</mat-icon>{{'menu.monthly' | translate }}\n              </a>\n              <a mat-list-item (click)=\"routeAnual()\">\n                <mat-icon>airplay</mat-icon>{{'menu.annual' | translate }}\n              </a>\n              <a mat-list-item (click)=\"routeHistorico()\">\n                <mat-icon>blur_linear</mat-icon>{{'menu.historic' | translate }}\n              </a>\n              <a mat-list-item (click)=\"routeConceptos()\">\n                <mat-icon>add_chart</mat-icon>{{'menu.concepts' | translate }}\n              </a>\n              <mat-divider></mat-divider>\n              <a mat-list-item (click)=\"routeUserProfile()\">\n                <mat-icon>person_outline</mat-icon>{{'menu.profile' | translate }}\n              </a>\n              <a mat-list-item (click)=\"logout()\">\n                <mat-icon>exit_to_app</mat-icon>{{'menu.logout' | translate }}\n              </a>\n              <mat-divider></mat-divider>\n              <a mat-list-item (click)=\"about()\">\n                <mat-icon>content_paste</mat-icon>{{'menu.about' | translate }}\n              </a>\n          </mat-nav-list>\n      </mat-sidenav>\n      <mat-sidenav-content>\n          <router-outlet></router-outlet>\n      </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>\n\n","import { HelperService } from './../../services/helper.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UsersService } from '../../services/users.service';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { firstValueFrom } from 'rxjs';\nimport { UrlConstants } from '../../constants/url.constants';\nimport { DatePipe } from '@angular/common';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n    loading = false;\n    location: any = {};\n    loginForm: FormGroup;\n    currentLang = this.translate.currentLang;\n    public registerUrl = '/' + UrlConstants.USERS + '/' + UrlConstants.REGISTRACION;\n\n    constructor(private router: Router,\n                private formBuilder: FormBuilder,\n                private usersService: UsersService,\n                private _datePipe: DatePipe,\n                private _helperService: HelperService,\n                public snackBar: MatSnackBar,\n                public translate: TranslateService) {\n\n      if (this.usersService.isSessionExpired() === false) {\n        this.ingresarApp();\n      }\n\n      this.location.height = window.screen.height;\n      this.location.width = window.screen.width;\n      this.location.appCodeName = window.navigator.appCodeName;\n      this.location.appVersion = window.navigator.appVersion;\n      this.location.language = window.navigator.language;\n      this.location.platform = window.navigator.platform;\n      this.location.userAgent = window.navigator.userAgent;\n    }\n\n    async ngOnInit(): Promise<void> {\n      this.loginForm = this.formBuilder.group({\n        emailFormControl: ['', [Validators.required, Validators.email]],\n        pwdFormControl: ['', [Validators.required]]\n      });\n\n      /*\n      //To get IP information\n      const source$ = this._ipService.getClientIp();\n\n      try {\n        const data = await firstValueFrom(source$);\n\n        this.location.ip = data.ip;\n        this.location.city = data.city;\n        this.location.region = data.region;\n        this.location.region_code = data.region_code;\n        this.location.country = data.country;\n        this.location.country_name = data.country_name;\n        this.location.continent_code = data.continent_code;\n        this.location.postal = data.postal;\n        this.location.latitude = data.latitude;\n        this.location.longitude = data.longitude;\n        this.location.timezone = data.timezone;\n        this.location.utc_offset = data.utc_offset;\n        this.location.country_calling_code = data.country_calling_code;\n        this.location.currency = data.currency;\n        this.location.languages = data.languages;\n        this.location.asn = data.asn;\n        this.location.org = data.org;\n\n      } catch (error) {\n        this.loading = false;\n        this._helperService.showSnackBarError(this.snackBar, this._helperService.getErrorMessage(error));\n      }\n      */\n\n    }\n\n    async login() {\n      this.loading = true;\n\n      const source$ = this.usersService.login(this.loginForm.value.emailFormControl, this.loginForm.value.pwdFormControl, this.translate.currentLang);\n\n      try {\n        const data = await firstValueFrom(source$);\n        if (data === true) {\n          this.loading = false;\n          this.ingresarApp();\n        } else {\n          this._helperService.showSnackBarError(this.snackBar, this.translate.instant('login.accessDenied'));\n          this.loading = false;\n        }\n\n      } catch (error) {\n        this.loading = false;\n        this._helperService.showSnackBarError(this.snackBar, this._helperService.getErrorMessage(error));\n      }\n    }\n\n    public selectLang(lang) : void {\n      this.currentLang = lang.value;\n      this.translate.use(lang.value);\n    }\n\n    private ingresarApp () {\n      const today = this._datePipe.transform(new Date(), 'yyyy-MM-dd');\n      this.router.navigate([UrlConstants.DASHBOARD, UrlConstants.DIARIO, today]);\n    }\n}\n","<div class=\"loginContainer\">\n  <div class=\"login\">\n    <div id=\"titleContainer\">\n      <div id =\"divTitle\">\n        <p>\n          <mat-card-title>MoneyGuard</mat-card-title>\n        </p>\n      </div>\n      <div id=\"divLang\">\n        <mat-select [(value)]=\"this.currentLang\" (selectionChange)=\"selectLang($event)\">\n          <mat-option *ngFor=\"let lang of this.translate.langs\" [value]=\"lang\">{{lang}}</mat-option>\n        </mat-select>\n      </div>\n    </div>\n\n    <form [formGroup]=\"loginForm\" class=\"full-width-form\" (ngSubmit)=\"login()\" novalidate>\n      <div>\n        <mat-form-field appearance=\"outline\" class=\"formfield-full-width\" >\n          <mat-label>{{'login.email' | translate }}</mat-label>\n          <input matInput placeholder=\"{{'login.email' | translate }}\" formControlName=\"emailFormControl\">\n          <mat-icon matSuffix>face</mat-icon>\n        </mat-form-field>\n      </div>\n      <div>\n        <mat-form-field appearance=\"outline\" class=\"formfield-full-width\">\n          <mat-label>{{'login.password' | translate }}</mat-label>\n          <input matInput type=password placeholder=\"{{'login.password' | translate }}\" formControlName=\"pwdFormControl\">\n          <mat-icon matSuffix>vpn_key</mat-icon>\n        </mat-form-field>\n      </div>\n      <div class=\"buttons-section\">\n        <div class=\"register-container\">\n          <a mat-button color=\"register\" [routerLink]=\"registerUrl\">{{'login.register' | translate }}</a>\n        </div>\n        <div class=\"login-button-container\">\n          <button mat-raised-button type=\"submit\" color=\"primary\" [disabled]=\"!loginForm.valid || loading\">{{'login.login' | translate }}\n            <mat-icon>directions_run</mat-icon>\n          </button>\n          <mat-spinner *ngIf=\"loading\" [diameter]=\"30\"></mat-spinner>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ISaldoItem } from '../../models/saldoItem';\n\n@Component({\n  selector: 'app-saldo-abierto',\n  templateUrl: './saldo-abierto.component.html',\n  styleUrls: ['./saldo-abierto.component.css']\n})\nexport class SaldoAbiertoComponent {\n  @Output() itemPushed = new EventEmitter();\n\n  constructor(public dialogRef: MatDialogRef<SaldoAbiertoComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: {saldos: ISaldoItem[]}) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  itemClicked(item: ISaldoItem) {\n    this.itemPushed.emit(item);\n  }\n\n}\n","<mat-dialog-content>    \n    <app-saldo-item [items]=\"data.saldos\" (itemClicked)=\"itemClicked($event)\"></app-saldo-item>\n</mat-dialog-content>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ISaldoItem } from '../../models/saldoItem';\nimport { UsersService } from '../../services/users.service';\n\n@Component({\n  selector: 'app-saldo-item',\n  templateUrl: './saldo-item.component.html',\n  styleUrls: ['./saldo-item.component.css']\n})\nexport class SaldoItemComponent {\n\n  @Input() items: ISaldoItem[];\n  @Output() itemClicked = new EventEmitter();\n\n  constructor(public _userService: UsersService, public translate: TranslateService) { }\n\n  onGoDetails (item: ISaldoItem) {\n    this.itemClicked.emit(item);\n  }\n\n}\n","<mat-card *ngFor=\"let item of items\" (click)=\"onGoDetails(item)\">\n    <mat-card-header>\n        <mat-card-title>\n            <mat-icon style=\"margin-right: 10px; float: left;\" >{{item.icon}}</mat-icon>\n            <div class=\"header\">{{ item.title }}</div>\n        </mat-card-title>\n    </mat-card-header>\n    <mat-list>\n        <mat-list-item>\n            <div class=\"itemTitle\">{{'balance.income' | translate }}</div>\n            <div class=\"itemValue\">{{item.ingresos | currency:this._userService.userCurrency}}</div>\n        </mat-list-item>\n        <mat-divider></mat-divider>\n        <mat-list-item>\n            <div class=\"itemTitle\">{{'balance.outcome' | translate }}</div>\n            <div class=\"itemValue\">{{item.egresos | currency:this._userService.userCurrency}}</div>\n        </mat-list-item>\n        <mat-divider></mat-divider>\n        <mat-list-item\n            [class.importeNegativo]=\"(item.ingresos - item.egresos) < 0\"\n            [class.importePositivo]=\"(item.ingresos - item.egresos) >= 0\">\n            <div class=\"itemTitle\">{{'balance.balance' | translate }}</div>\n            <div class=\"itemValue\">\n                {{(item.ingresos - item.egresos) | currency:this._userService.userCurrency}}\n            </div>\n        </mat-list-item>\n        <mat-divider></mat-divider>\n    </mat-list>\n</mat-card>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { UsersService } from '../../services/users.service';\n\n@Component({\n  selector: 'app-saldo',\n  templateUrl: './saldo.component.html',\n  styleUrls: ['./saldo.component.css']\n})\nexport class SaldoComponent {\n  @Input() titulo: string;\n  @Input() saldo: number;\n  @Output() saldoClicked = new EventEmitter();\n\n  constructor(public _userService: UsersService) { }\n\n  onClick() {\n    this.saldoClicked.emit();\n  }\n}\n","<div class=\"saldos\">\n  <p onMouseOver=\"this.style.cursor='pointer'\"\n      [class.saldoNegativo]=\"saldo < 0\"\n      (click)=\"onClick()\">\n    {{titulo}}: {{saldo | currency:this._userService.userCurrency}}\n  </p>\n</div>\n","//import { MatTooltipModule } from '@angular/material//tooltip';\nimport { SaldoComponent } from './../../_components/saldo/saldo.component';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule  } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { SaldoAbiertoComponent } from '../../_components/saldo-abierto/saldo-abierto.component';\nimport { SaldoItemComponent } from '../../_components/saldo-item/saldo-item.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [SaldoComponent, SaldoAbiertoComponent, SaldoItemComponent],\n  imports: [\n    CommonModule,\n    MatChipsModule,\n    MatDialogModule,\n    MatCardModule,\n    MatAutocompleteModule,\n    MatListModule,\n    MatIconModule,\n    MatTableModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    TranslateModule\n  ],\n  exports: [\n    SaldoComponent,\n    SaldoAbiertoComponent,\n    SaldoItemComponent,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatProgressSpinnerModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatCardModule,\n    MatButtonToggleModule,\n    MatBadgeModule,\n    MatNativeDateModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatTabsModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    //MatTooltipModule,\n    MatRadioModule,\n    MatIconModule,\n    MatListModule,\n    MatChipsModule,\n    MatAutocompleteModule\n  ],\n  entryComponents: [ SaldoAbiertoComponent ],\n})\nexport class SharedModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  constructor(translate: TranslateService) {\n    translate.addLangs(['en', 'es', 'fr']);\n    translate.setDefaultLang('es');\n    translate.use('es');\n  }\n}\n","<router-outlet></router-outlet>\n","import { SharedModule } from './../_modules/shared/shared.module';\nimport { LOCALE_ID, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { LoginComponent } from './../_components/login/login.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UrlConstants } from 'src/constants/url.constants';\nimport { AuthGuard } from 'src/guards/auth.guard';\nimport { DashboardComponent } from 'src/_components/dashboard/dashboard.component';\nimport { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { UsersService } from 'src/services/users.service';\nimport { HelperService } from 'src/services/helper.service';\nimport { UrlService } from 'src/services/url.service';\nimport { CurrencyPipe, DatePipe, HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { AuthInterceptor } from 'src/interceptors/AuthInterceptor';\nimport { AboutComponent } from 'src/_components/about/about.component';\nimport { SumaryMonthService } from 'src/services/sumary-month.service';\nimport { SumaryAnioService } from 'src/services/sumary-anio.service';\nimport { SumaryHistoricoService } from 'src/services/sumary-historico.service';\nimport { DiarioService } from 'src/services/diario.service';\nimport { ConceptoService } from 'src/services/concepto.service';\nimport { IpService } from 'src/services/ip.service';\nimport { FormatingService } from 'src/sharedServices/formatingService';\nimport { CalculationService } from 'src/sharedServices/calculationService';\n\nconst routes: Routes = [\n\n  { path: '', component: LoginComponent },\n  { path: UrlConstants.LOGIN, component: LoginComponent },\n\n  { path: UrlConstants.USERS,\n    loadChildren: () => import('./../_modules/users/users.module').then(m => m.UsersModule) },\n\n  { path: UrlConstants.DASHBOARD, component: DashboardComponent, canActivateChild: [AuthGuard],\n                          children: [\n\n                            { path: UrlConstants.DIARIO,\n                              loadChildren: () => import('./../_modules/diario/diario.module').then(m => m.DiarioModule) },\n\n                            { path: UrlConstants.MENSUAL,\n                              loadChildren: () => import('./../_modules/mensual/mensual.module').then(m => m.MensualModule) },\n\n                            { path: UrlConstants.ANUAL,\n                              loadChildren: () => import('./../_modules/anual/anual.module').then(m => m.AnualModule) },\n\n                            { path: UrlConstants.HISTORICO,\n                              loadChildren: () => import('./../_modules/historico/historico.module').then(m => m.HistoricoModule) },\n\n                            { path: UrlConstants.CONCEPTOS,\n                              loadChildren: () => import('./../_modules/concepts/concepts.module').then(m => m.ConceptsModule) },\n\n                            { path: UrlConstants.USERS,\n                              loadChildren: () => import('./../_modules/users/users.module').then(m => m.UsersModule) },\n\n                            { path: '',\n                              loadChildren: () => import('./../_modules/diario/diario.module').then(m => m.DiarioModule) },\n                          ]},\n  { path: '**', redirectTo: UrlConstants.DASHBOARD}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n    AboutComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n         provide: TranslateLoader,\n         useFactory: httpTranslateLoader,\n         deps: [HttpClient]\n         }\n      }),\n    MatToolbarModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    SharedModule,\n    RouterModule.forRoot(routes, { onSameUrlNavigation: 'reload' }),\n  ],\n  providers: [\n    SumaryMonthService,\n    SumaryAnioService,\n    SumaryHistoricoService,\n    DiarioService,\n    UsersService,\n    ConceptoService,\n    IpService,\n    HelperService,\n    FormatingService,\n    CalculationService,\n    UrlService,\n    CurrencyPipe,\n    DatePipe,\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n    {\n      provide: LocationStrategy,\n      useClass: HashLocationStrategy\n    },\n    {\n      provide: LOCALE_ID,\n      useValue: window.navigator.language.split('-')[0]\n    }\n  ],\n  entryComponents: [ AboutComponent ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n// AOT compilation support\nexport function httpTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}\n","export class UrlConstants {\n    static readonly DASHBOARD = 'dashboard';\n    static readonly DIARIO = 'diario';\n    static readonly MENSUAL = 'mensual';\n    static readonly ANUAL = 'anual';\n    static readonly HISTORICO = 'historico';\n    static readonly CONCEPTOS = 'conceptos';\n    static readonly USERPROFILE = 'profile';\n    static readonly REGISTRACION = 'registracion';\n    static readonly LOGIN = 'login';\n    static readonly USERS = 'users';\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://192.168.0.12:4433/backend/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, CanActivateChild } from '@angular/router';\nimport { UrlConstants } from 'src/constants/url.constants';\nimport { UsersService } from '../services/users.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate, CanActivateChild {\n\n  constructor(private router: Router, private userService: UsersService) { }\n\n  canActivate() {\n    return this.userAlowed();\n  }\n\n  canActivateChild() {\n    return this.userAlowed();\n  }\n\n  private userAlowed(): boolean {\n    if (this.userService.isSessionExpired() === false) {\n      return true;\n    }\n\n    // not logged in so redirect to login page\n    this.userService.logout();\n    this.router.navigate([UrlConstants.LOGIN]);\n    return false;\n  }\n}\n","import { UrlConstants } from './../constants/url.constants';\nimport {Injectable} from '@angular/core';\nimport {HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, tap } from 'rxjs';\nimport { UsersService } from '../services/users.service';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private _userService: UsersService,\n              private _router: Router) {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    if (localStorage.getItem('alow') !== null) {\n      const changedReq = req.clone({ headers: req.headers.set('Authorization', 'Bearer ' + localStorage.getItem('alow')) });\n      return next.handle(changedReq).pipe(tap((event: HttpEvent<any>) => {\n        if (event instanceof HttpResponse) {\n          // do stuff\n          // console.log(event);\n        }\n      }, (err: any) => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 401) {\n            // not logged in so redirect to login page\n            this._userService.logout();\n            this._router.navigate([UrlConstants.LOGIN]);\n          }\n          if (err.status === 400) {\n            // business error\n          }\n        }\n      }));\n    }\n\n    return next.handle(req);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { Subscription } from 'rxjs';\n\n@Injectable()\nexport class ComponentBase implements OnDestroy {\n\n    private mobileQuery: MediaQueryList;\n    protected subscription: Subscription;\n\n    constructor(changeDetectorRef: ChangeDetectorRef,\n                media: MediaMatcher) {\n        this.mobileQuery = media.matchMedia('(max-width: 600px)');\n        this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n        this.mobileQuery.addEventListener('change', this._mobileQueryListener);\n    }\n\n    private _mobileQueryListener: () => void;\n\n    isMobile (): boolean{\n        return this.mobileQuery.matches;\n    }\n\n    ngOnDestroy(): void {\n        this.mobileQuery.removeEventListener('change', this._mobileQueryListener);\n        if (this.subscription){\n            this.subscription.unsubscribe();\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { UrlService } from './url.service';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class ConceptoService {\n\n    constructor(\n            private _http: HttpClient,\n            private _urlService: UrlService) { }\n\n    getConceptos(): Observable<any[]> {\n        return this._http.get<any[]>(this._urlService.urlGetConceptos())\n                        .pipe(tap(data => JSON.stringify(data)));\n    }\n\n    insertConcepto(descripcion: string, credito: boolean): Observable<void> {\n        return this._http.post<any>(this._urlService.urlInsertConcepto(),\n                {description: descripcion,\n                 credit: credito});\n    }\n\n    updateConcepto(idConcepto: string, descripcion: string, credito: boolean): Observable<void> {\n        return this._http.put<any>(this._urlService.urlUpdateConcepto(),\n                {description: descripcion,\n                 credit: credito,\n                 conceptId: idConcepto});\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { IConceptoDiario } from '../models/concepto.diario';\nimport { UrlService } from './url.service';\nimport { tap } from 'rxjs/operators';\nimport { DatePipe } from '@angular/common'\n\n@Injectable()\nexport class DiarioService {\n\n  constructor(private _http: HttpClient,\n              private _urlService: UrlService,\n              public datepipe: DatePipe) { }\n\n  getConceptosImportes(fecha: Date): Observable<IConceptoDiario[]> {\n    const url = this._urlService.urlGetConceptosImportes(this.datepipe.transform(fecha, 'yyyy-MM-dd'));\n\n    return this._http.get<IConceptoDiario[]>(url)\n                    .pipe(tap(data => JSON.stringify(data)));\n  }\n\n  setConceptoImporte(fecha: Date, importe: number, idConcepto: number, tags: string[]): Observable<void> {\n    return this._http.post<any>(this._urlService.urlSetConceptoImporte(),\n            {TransactionDate: fecha.getFullYear().toString() +\n                    (fecha.getMonth() + 1).toString().padStart(2, '0') +\n                    fecha.getDate().toString().padStart(2, '0'),\n              Ammount: importe,\n              ConceptId: idConcepto,\n              movimientoTags: tags});\n  }\n\n  getPrimerConsumo(): Observable<any> {\n    return this._http.get<Date>(this._urlService.urlGetPrimerConsumo());\n  }\n\n  getConceptosTotalMes(fecha: string /*YYYYMM*/): Observable<any[]> {\n    return this._http.get<any[]>(this._urlService.urlGetConceptosTotalMes(fecha))\n                  //.delay(3000)\n                  .pipe(tap(data => JSON.stringify(data)));\n  }\n\n  getConceptosMovimMes(idConcepto: string, fecha: string /*YYYYMM*/): Observable<any[]> {\n    return this._http.get<any[]>(this._urlService.urlGetConceptosMovimMes(idConcepto, fecha))\n                    //.delay(3000)\n                    .pipe(tap(data => JSON.stringify(data)));\n  }\n\n  getConceptosTotalAnio(anio: number /*YYYY*/): Observable<any[]> {\n    return this._http.get<any[]>(this._urlService.urlGetConceptosTotalAnio(anio))\n                  //.delay(3000)\n                  .pipe(tap(data => JSON.stringify(data)));\n  }\n\n  getConceptosMovimAnio(idConcepto: string, anio: number /*YYYY*/): Observable<any[]> {\n    return this._http.get<any[]>(this._urlService.urlGetConceptosMovimAnio(idConcepto, anio))\n                    //.delay(3000)\n                    .pipe(tap(data => JSON.stringify(data)));\n  }\n\n  getConceptosTotalHistorico(): Observable<any[]> {\n    return this._http.get<any[]>(this._urlService.urlGetConceptosTotalHistorico())\n                  //.delay(3000)\n                  .pipe(tap(data => JSON.stringify(data)));\n  }\n\n  getConceptosMovimHistorico(idConcepto: string): Observable<any[]> {\n    return this._http.get<any[]>(this._urlService.urlGetConceptosMovimHistorico(idConcepto))\n                    //.delay(3000)\n                    .pipe(tap(data => JSON.stringify(data)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class HelperService {\n\n    constructor(private translate: TranslateService) { }\n\n    getErrorMessage(error: any): string {\n        let message = '';\n\n        if (error === undefined ||\n            error.status === undefined) {\n                return message;\n        }\n\n        switch (error.status) {\n            case 0:\n              message = this.translate.instant(\"http.cantConnectWithServer\");\n              break;\n\n            case 400: /* bad request */\n              message = error.error.message;\n              break;\n\n            case 401: /* Unathorized */\n              message = this.translate.instant(\"http.sessionExpired\");\n              break;\n\n            case 500: /* internal server error */\n              message = this.translate.instant(\"http.unexpectedError\", {error: error.error.ErrorTraceId});\n              break;\n          }\n\n          return message;\n    }\n\n    convertStringMMYYYYToDate(fecha: string /* MMYYYY */): Date {\n        const mes = Number(fecha.substring(0, 2)) - 1;\n        const anio = Number(fecha.substring(2, 6));\n\n        const retFecha = new Date(anio, mes, 1);\n\n        return retFecha;\n    }\n\n    /* La fecha de entrada es 1980-05-13T00:00:00.000Z y la de salida 13/05/1980*/\n    convertStringYYYMMDDToStringDDMMYYYY(fecha: string): string {\n        const dia = fecha.substring(8, 10);\n        const mes = fecha.substring(5, 7);\n        const anio = fecha.slice(0, 4);\n\n        return dia + '/' + mes + '/' + anio;\n    }\n\n    toCamelCase(strInput: string | null): string {\n      if (strInput === null){\n        throw 'Invalid parameter NULL';\n      }\n\n      const str = strInput?.toString().split(' ');\n\n      for (let i = 0, x = str.length; i < x; i++) {\n          str[i] = str[i][0].toUpperCase() + str[i].substr(1);\n      }\n\n      return str.join(' ');\n    }\n\n    showSnackBarError(snackBar: MatSnackBar, errorMessage: string): void {\n      snackBar.open(errorMessage,\n                    '',\n                    { duration: 5000, panelClass: ['error-snackbar'], direction: 'ltr', verticalPosition: 'bottom' });\n    }\n\n    showSnackBarInformation(snackBar: MatSnackBar, message: string): void {\n      snackBar.open(message, '', { duration: 2000, direction: 'ltr', verticalPosition: 'bottom' });\n    }\n\n    showSnackBarSuccess(snackBar: MatSnackBar, message: string): void {\n      snackBar.open(message,\n                    '',\n                    { duration: 2000, panelClass: ['success-snackbar'], direction: 'ltr', verticalPosition: 'bottom' });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class IpService {\n\n  constructor(private _http: HttpClient) { }\n\n  getClientIp(): Observable<any> {\n    // let url = \"http://freegeoip.net/json/\";\n    const url = 'https://ipapi.co/json/';\n\n    return this._http.get(url)\n                    .pipe(tap(data => JSON.stringify(data)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SumaryAnio } from './../models/sumaryAnio';\nimport { UrlService } from './url.service';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class SumaryAnioService {\n\n  constructor(private _http: HttpClient,\n              private _urlService: UrlService) { }\n\n  getSumary(fecha: Date): Observable<SumaryAnio> {\n    return this._http.get<SumaryAnio>(this._urlService.urlGetSumaryAnual(fecha.getFullYear().toString()))\n                    .pipe(tap(data => JSON.stringify(data)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SumaryHistorico } from './../models/sumaryHistorico';\nimport { UrlService } from './url.service';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class SumaryHistoricoService {\n\n  constructor(private _http: HttpClient,\n              private _urlService: UrlService) { }\n\n  getSumary(): Observable<SumaryHistorico> {\n    return this._http.get<SumaryHistorico>(this._urlService.urlGetSumaryHistorico())\n                    .pipe(tap(data => JSON.stringify(data)));\n  }\n}\n","import { SumaryMonth } from './../models/sumaryMonth';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { UrlService } from './url.service';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class SumaryMonthService {\n\n  constructor(private _http: HttpClient,\n              private _urlService: UrlService) { }\n\n  getSumary(fecha: Date): Observable<SumaryMonth> {\n    const year = fecha.getFullYear();\n    return this._http.get<SumaryMonth>(this._urlService.urlGetSumaryMensual(year, fecha.getMonth() + 1))\n                    .pipe(tap(data => JSON.stringify(data)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class UrlService {\n    private _host: string = environment.apiUrl;\n\n    constructor() { }\n\n    urlGetConceptos(): string {\n        return this._host + 'concept';\n    }\n\n    urlInsertConcepto(): string {\n        return this._host + 'concept';\n    }\n\n    urlUpdateConcepto(): string {\n        return this._host + 'concept';\n    }\n\n    urlGetConceptosImportes(fecha: string | null): string {\n        return this._host + 'transaction/' + fecha;\n    }\n\n    urlSetConceptoImporte(): string {\n        return this._host + 'transaction';\n    }\n\n    urlGetPrimerConsumo(): string {\n        return this._host + 'transaction/firstlast';\n    }\n\n    urlGetConceptosTotalMes(fecha: string): string {\n        return this._host + 'concept/monthly/' + fecha + '/summary';\n    }\n\n    urlGetConceptosMovimMes(idConcepto: string, fecha: string): string {\n        return this._host + 'concept/' + idConcepto + '/monthly/' + fecha + '/summary';\n    }\n\n    urlGetSumaryMensual(year: number, month: number): string {\n        return this._host + 'period/totalinout/' + year + '/' + month ;\n    }\n\n    urlLogin(): string {\n        return this._host + 'Account/login';\n    }\n\n    urlRegistracion(): string {\n        return this._host + 'Account/signup';\n    }\n\n    urlUserUpdateProfile(): string {\n        return this._host + 'account';\n    }\n\n    urlGetSumaryAnual(fecha: string): string {\n        return this._host + 'period/totalinout/' + fecha.toString();\n    }\n\n    urlGetConceptosTotalAnio(anio: number): string {\n        return this._host + 'concept/annual/' + anio.toString() + '/summary';\n    }\n\n    urlGetConceptosMovimAnio(idConcepto: string, anio: number): string {\n        return this._host + 'concept/' + idConcepto + '/annual/' + anio.toString() + '/summary';\n    }\n\n    urlGetUserProfile(): string {\n        return this._host + 'account/';\n    }\n\n    urlGetSumaryHistorico(): string {\n        return this._host + 'api/historico/sumary';\n    }\n\n    urlGetConceptosTotalHistorico(): string {\n        return this._host + 'concept/historic/summary';\n    }\n\n    urlGetConceptosMovimHistorico(idConcepto: string): string {\n        return this._host + 'concept/' + idConcepto + '/historic/summary';\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\nimport { User } from '../models/user';\nimport { UrlService } from './url.service';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { FormGroup } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class UsersService {\n    private jwtHelper = new JwtHelperService();\n    public userCurrency: string;\n\n    public userName = new BehaviorSubject<string>('');\n\n    constructor(private _http: HttpClient,\n                private translate: TranslateService,\n                private _urlService: UrlService) {\n      this.setUserName(this.getUserNameFromToken());\n    }\n\n    login(email: string, password: string, language: string ): Observable<boolean> {\n        return this._http.post<any>(this._urlService.urlLogin(),\n                {email, password, language})\n                .pipe(\n                  map(user => {\n                    // login successful if there's a jwt token in the response\n                    if (user && user.token) {\n                        // store user details and jwt token in local storage to keep user logged in between page refreshes\n                        localStorage.setItem('alow', user.token);\n                        this.userCurrency = this.getMoneda();\n                        this.setUserName(this.getUserNameFromToken());\n                        this.setLang(this.getUserLanguageFromToken());\n                        return true;\n                    }\n\n                    return false;\n                  })\n                );\n    }\n\n    register( usuario: User ): Observable<void> {\n        const fechanacimiento = usuario.bornDate.getFullYear().toString() +\n                (usuario.bornDate.getMonth() + 1).toString().padStart(2, '0') +\n                usuario.bornDate.getDate().toString().padStart(2, '0');\n\n        return this._http.post<any>(this._urlService.urlRegistracion(),\n                {email: usuario.email,\n                 password: usuario.password,\n                 name: usuario.name,\n                 bornDate: fechanacimiento,\n                 currency: usuario.currency,\n                 language: usuario.language});\n    }\n\n    updateProfile(usuario: User): Observable<void> {\n        const fechanacimiento = usuario.bornDate.getFullYear().toString() +\n                (usuario.bornDate.getMonth() + 1).toString().padStart(2, '0') +\n                usuario.bornDate.getDate().toString().padStart(2, '0');\n\n        return this._http.put<any>(this._urlService.urlUserUpdateProfile(),\n                {email: usuario.email,\n                 password: usuario.password,\n                 name: usuario.name,\n                 bornDate: fechanacimiento,\n                 currency: usuario.currency,\n                 language: usuario.language});\n    }\n\n    logout() {\n        // remove user from local storage to log user out\n        localStorage.removeItem('alow');\n    }\n\n    isSessionExpired(): boolean {\n        const token = localStorage.getItem('alow');\n        if (token === null) {\n            return true;\n        }\n\n        if (this.jwtHelper.isTokenExpired(token) === true) {\n            return true;\n        }\n\n        return false;\n    }\n\n    private getUserNameFromToken(): string {\n        const token = localStorage.getItem('alow');\n        let userName = '';\n\n        if (token !== null) {\n            userName = this.jwtHelper.decodeToken(token).user;\n        }\n\n        return userName;\n    }\n\n    private setLang(lang: string) : void {\n      this.translate.use(lang);\n    }\n\n    private getUserLanguageFromToken(): string {\n      const token = localStorage.getItem('alow');\n      let userLang = '';\n\n      if (token !== null) {\n          userLang = this.jwtHelper.decodeToken(token).lang;\n      }\n\n      return userLang;\n  }\n\n    setUserName(userName: string): void {\n      this.userName.next(userName);\n    }\n\n    getUserId(): string {\n        const token = localStorage.getItem('alow');\n        let userId = '';\n\n        if (token !== null) {\n            userId = this.jwtHelper.decodeToken(token).id;\n        }\n\n        return userId;\n    }\n\n    private getMoneda(): string {\n        const token = localStorage.getItem('alow');\n        let moneda = '';\n\n        if (token !== null) {\n            moneda = this.jwtHelper.decodeToken(token).moneda;\n        }\n\n        return moneda;\n    }\n\n    getProfile(): Observable<User> {\n      return this._http.get<User>(this._urlService.urlGetUserProfile())\n                        .pipe(\n                          map(res => {\n                            const user: User = {id: res.id,\n                                                statusId: res.statusId,\n                                                entryDate: res.entryDate === null ? new Date() : new Date(res.entryDate),\n                                                name: res.name,\n                                                language: res.language,\n                                                currency: res.currency,\n                                                bornDate: new Date(res.bornDate),\n                                                email: res.email,\n                                                password: \"\"};\n                            return user;\n                          })\n                        );\n    }\n\n    getAvailablesCurrencies(): string[] {\n        return ['$', 'U$D', '€'];\n    }\n\n    checkPasswords(group: FormGroup) {\n      if (group === null) {\n        throw 'group is NULL';\n      }\n      const pass = group.get('passwordFormControl')?.value;\n      const confirmPass = group.get('passwordRepeatFormControl')?.value;\n\n      return pass === confirmPass ? null : { notSame: true };\n      }\n\n}\n","export class CalculationService {\n\n    public getIngresos(items: number[]): number {\n        let ingresos = 0;\n\n        if (!items) {\n          return 0;\n        }\n\n        if (items.filter(x => x > 0).length > 0) {\n          ingresos = items.filter(x => x > 0)\n                                  .map(c => c)\n                                  .reduce((sum, current) => sum + current);\n        }\n\n        return Math.abs(ingresos);\n      }\n\n      getEgresos(items: number[]): number {\n        let egresos = 0;\n\n        if (!items) {\n          return 0;\n        }\n\n        if (items.filter(x => x < 0).length > 0) {\n          egresos = items.filter(x => x < 0)\n                                  .map(c => c)\n                                  .reduce((sum, current) => sum + current);\n        }\n\n        return Math.abs(egresos);\n      }\n}\n","import { formatNumber } from '@angular/common';\nimport { LOCALE_ID, Inject, Injectable } from '@angular/core';\n\n@Injectable()\nexport class FormatingService {\n\n  constructor(@Inject(LOCALE_ID) private locale: string) { }\n\n  public FormatNumber(data: number, alwaysPositive: boolean, thousandsSeparator: boolean = true): string {\n    let numberFormatted =  formatNumber(data, this.locale, '1.2-2');\n    if (alwaysPositive) {\n      numberFormatted = numberFormatted.replace('-', '');\n    }\n    if (!thousandsSeparator){\n      while(numberFormatted.indexOf(this.thusandsSeparator()) !== -1) {\n        numberFormatted = numberFormatted.replace(this.thusandsSeparator() === '.' ? '.' : ',', '');\n      }\n    }\n\n    return numberFormatted;\n  }\n\n  private thusandsSeparator(): string {\n    const n = 1.1;\n    const x = n.toLocaleString(this.locale).substring(1, 2);\n    if (x === ',') {\n      return '.';\n    }\n    return ',';\n  }\n}\n"],"names":["Validators","firstValueFrom","UrlConstants","i0","LoginComponent","constructor","router","formBuilder","usersService","_datePipe","_helperService","snackBar","translate","currentLang","USERS","REGISTRACION","isSessionExpired","ingresarApp","location","height","window","screen","width","appCodeName","navigator","appVersion","language","platform","userAgent","ngOnInit","loginForm","group","emailFormControl","required","email","pwdFormControl","login","loading","source$","value","data","showSnackBarError","instant","error","getErrorMessage","selectLang","lang","use","today","transform","Date","navigate","DASHBOARD","DIARIO","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"webpack:///"}